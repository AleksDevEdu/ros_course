<?xml version="1.0"?>
<launch>
  <arg name="gz_gui" default="false" />
  
  <!-- Аргумент, которым мы можем задать начальное положение робота в мире -->
  <!-- Параметры (-x, -y и т.д.) заданы как опции для узла spawn_model -->
  <arg name="initial_pose" default="-x 0 -y 0 -z 0 -R 0 -P 0 -Y 0" />

  <!-- Запускаем Gazebo, мир пустой - стандартный -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="use_sim_time" value="true"/>
    <arg name="debug" value="false"/>
    <arg name="gui" value="$(arg gz_gui)" />
  </include>

  <!-- Аргумент, который содержит имя файла -->
  <arg name="urdf_file" default="$(find study_pkg)/descriptions/my_robot.urdf" />
  <!-- Настраиваем параметр `robot_description`, который будет нашим описанием робота -->
  <!-- Прогоняем через узел xacro, который произведет обработку файла, остальной функционал увидим позже -->
  <param name="robot_description" command="$(find xacro)/xacro --inorder '$(arg urdf_file)'" />
  
  <!-- Создаем робота узлом spawn_model -->
  <node name="spawn_turtlebot_model" pkg="gazebo_ros" type="spawn_model"
        args="$(arg initial_pose) -unpause -urdf -param robot_description -model my_robot" />

  <!-- Опубликуем TF статические преобразования на основе описания `robot_description` -->
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" />

  <!-- Просто запустим rviz, после настройки добавим запуск конфигурации -->
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find study_pkg)/rviz/my_robot.rviz" />
</launch>
