<?xml version="1.0"?>


<robot name="my_robot" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <xacro:property name="wheel_width" value="0.03" />
  <xacro:property name="wheel_radius" value="0.04" />
  <xacro:property name="wheel_mass" value="0.3" />

  <xacro:property name="wheel_chassis_bias" value="${wheel_width/2}" />

  <xacro:property name="chassis_mass" value="3.7" />
  <xacro:property name="chassis_length" value="0.485" />
  <xacro:property name="chassis_width" value="0.227" />
  <xacro:property name="chassis_height" value="0.01" />

  <xacro:property name="wheelbase" value="0.3" />

  <!-- https://github.com/jbpassot/ackermann_vehicle/blob/master/ackermann_vehicle_description/urdf/em_3905.urdf.xacro -->
  <xacro:property name="degrees_45" value="0.785398163"/>
  <xacro:property name="degrees_90" value="1.57079633"/>

  <!-- ~0.5 rad -->
  <xacro:property name="degrees_30" value="${pi/3}"/>

  <xacro:property name="wheel_turn_limit" value="${degrees_30}"/>

  <!-- <xacro:property name="servo_stall_torque" value="0.5649"/> -->
  <xacro:property name="servo_stall_torque" value="100"/>
  <xacro:property name="servo_no_load_speed" value="4.553"/>

  <!-- INERTIAL MACROS -->
  <xacro:macro name="null_inertial">
    <inertial>
      <mass value="0.001"/>
      <inertia ixx="0.001" ixy="0" ixz="0" 
               iyy="0.001" iyz="0" 
               izz="0.001"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="solid_cuboid_inertial"
               params="width length height mass *origin">
    <inertial>
      <xacro:insert_block name="origin"/>
      <mass value="${mass}"/>
      <inertia ixx="${mass * (width * width + height * height) / 12}"
               ixy="0" ixz="0"
               iyy="${mass * (length * length + height * height) / 12}"
               iyz="0"
               izz="${mass * (width * width + length * length) / 12}"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="solid_cylinder_inertial"
               params="r h mass *origin">
    <inertial>
      <xacro:insert_block name="origin"/>
      <mass value="${mass}"/>
      <inertia ixx="${mass / 12 * (3 * r * r + h * h)}" ixy="0.0" ixz="0.0"
               iyy="${mass / 12 * (3 * r * r + h * h)}" iyz="0.0"
               izz="${mass / 2 * r * r}" />
    </inertial>
  </xacro:macro>
  <!-- INERTIAL MACROS END -->

  <xacro:macro name="wheel_object" params="name">
    <link name="${name}">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <cylinder length="${wheel_width}" radius="${wheel_radius}"/>
        </geometry>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <cylinder length="${wheel_width}" radius="${wheel_radius}"/>
        </geometry>
      </collision>
      <xacro:solid_cylinder_inertial
          r="${wheel_radius}" h="${wheel_width}"
          mass="${wheel_mass}" >
        <origin xyz="0 0 0" rpy="0 0 0" />
      </xacro:solid_cylinder_inertial>
    </link>
    <gazebo reference="${name}">
      <mu1>1.2</mu1>
      <mu2>1.05</mu2>
      <kp>10000000</kp>
      <kd>1</kd> 
      <minDepth>0.01</minDepth>
      <maxVel>10.0</maxVel> 

      <material>Gazebo/Black</material>
    </gazebo>
  </xacro:macro>

  <xacro:macro name="traveling_wheel" params="name base_name xyz ">
    <xacro:wheel_object name="${name}" />
    
    <joint name="${name}_rotate_joint" type="continuous">
      <parent link="${base_name}"/>
      <child link="${name}"/>
      <origin xyz="${xyz}" rpy="${pi/2} 0 0"/>
      <axis xyz="0 0 -1"/>
    </joint>

<!--     <transmission name="${name}_rotate_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="${name}_rotate_joint">
        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      </joint>
      <actuator name="${name}_rotate_motor">
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
    </transmission> -->
  </xacro:macro>

  <xacro:macro name="steering_wheel" params="name base_name xyz ref">
    <link name="${name}_base">
      <xacro:null_inertial/>
    </link>

    <joint name="${name}_steering_joint" type="revolute">
      <limit lower="${-wheel_turn_limit}" upper="${wheel_turn_limit}" 
             effort="${servo_stall_torque}" velocity="${servo_no_load_speed}"/>
      <parent link="${base_name}"/>
      <child link="${name}_base"/>
      <origin xyz="${xyz}" rpy="0 0 0"/>
      <axis xyz="0 0 1"/>
    </joint>

    <transmission name="${name}_steer_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="${name}_steering_joint">
        <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      </joint>
      <actuator name="${name}_steering_motor">
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
    </transmission>

    <!-- <xacro:traveling_wheel name="${name}" base_name="${name}_base" xyz="0 ${ref * wheel_chassis_bias} 0" /> -->
    <!-- <xacro:traveling_wheel name="${name}" base_name="${name}_base" xyz="0 0 0" /> -->

    <xacro:wheel_object name="${name}" />
    
    <joint name="${name}_rotate_joint" type="continuous">
      <parent link="${name}_base"/>
      <child link="${name}"/>
      <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
      <axis xyz="0 0 -1"/>
    </joint>

    <transmission name="${name}_rotate_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="${name}_rotate_joint">
        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      </joint>
      <actuator name="${name}_rotate_motor">
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
    </transmission>
  </xacro:macro>
<!-- 
  <link name="base_footage">
  </link>
  <gazebo reference="base_footage"/>
 -->
  <link name="base_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
      </geometry>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
      </geometry>
    </collision>
    <xacro:solid_cuboid_inertial 
          length="${chassis_length}" width="${chassis_width}" 
          height="${chassis_height}" mass="${chassis_mass}">
      <origin xyz="0 0 0" rpy="0 0 0" />
    </xacro:solid_cuboid_inertial>
  </link>
  <gazebo reference="base_link">
    <material>Gazebo/Grey</material>
  </gazebo>
<!-- 
  <joint name="base_footage_2_link" type="fixed">
    <parent link="base_footage"/>
    <child link="base_link"/>
    <origin xyz="0 0 ${wheel_radius}" rpy="0 0 0"/>
  </joint>
 -->
<!-- 
  <xacro:steering_wheel name="right_steer_wheel" base_name="base_link" xyz="${wheelbase/2} ${-chassis_width/2} 0" ref="-1" />
  <xacro:steering_wheel name="left_steer_wheel" base_name="base_link" xyz="${wheelbase/2} ${chassis_width/2} 0" ref="1" />
 -->
  <xacro:steering_wheel name="right_steer_wheel" base_name="base_link" xyz="${wheelbase/2} ${-(chassis_width/2 + wheel_chassis_bias)} 0" ref="-1" />
  <xacro:steering_wheel name="left_steer_wheel" base_name="base_link" xyz="${wheelbase/2} ${(chassis_width/2 + wheel_chassis_bias)} 0" ref="1" />

  <xacro:traveling_wheel name="right_travel_wheel" base_name="base_link" 
                         xyz="${-wheelbase/2} ${-(chassis_width/2 + wheel_chassis_bias)} 0" />
  <xacro:traveling_wheel name="left_travel_wheel" base_name="base_link" 
                         xyz="${-wheelbase/2} ${(chassis_width/2 + wheel_chassis_bias)} 0" />

  <!-- Gazebo plugin for ROS Control -->
  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <!-- <robotNamespace>/</robotNamespace> -->
    </plugin>
  </gazebo>

</robot>


